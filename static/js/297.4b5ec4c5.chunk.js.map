{"version":3,"file":"static/js/297.4b5ec4c5.chunk.js","mappings":"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","sources":["components/PhoneBook/ContactListItem/ContactListItem.styled.js","components/PhoneBook/ContactListItem/ContactListItem.jsx","components/PhoneBook/ContactList/ContactList.styled.js","redux/selectors.js","components/PhoneBook/ContactList/ContactList.jsx","components/PhoneBook/ContactForm/ContactForm.styled.js","components/PhoneBook/ContactForm/ContactForm.jsx","components/PhoneBook/Filter/Filter.styled.js","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/phonebook.module.css","pages/contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const ListItem = styled.li`\ndisplay: flex;\ngap: 40px;\nalign-items: center;\n`;\n\n\nexport const Button = styled.button`\n  padding: 5px 20px;\n  color: #333340;\n  background-color: transparent;\n  border: 1px solid #333340;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 250ms;\n  &&:hover{\n    background-color: gray;\n    color: white;\n  }\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { ListItem, Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ name, number, id, onDelete, idx }) => {\n\n    return (\n        <ListItem key={id}>\n            <div>{idx + 1}</div>\n            {name}: {number}\n            <Button onClick={() => onDelete(id)}>delete</Button>\n        </ListItem>\n    );\n};\n\n\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    idx: PropTypes.number.isRequired\n};\n\nexport default ContactListItem;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  padding: 0 20px;\n  list-style: none;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;","import { deleteContact } from 'redux/contacts-operations';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport { List } from './ContactList.styled';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nfunction ContactList() {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id))\n  }\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }, idx) => (\n        <ContactListItem\n          onDelete={handleDeleteContact}\n          name={name}\n          number={number}\n          id={id}\n          key={id}\n          idx={idx}\n        />\n      ))}\n    </List>\n  );\n}\n\n\n\n\nexport default ContactList;\n\nContactList.propeTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n  onDelete: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled(Field)`\n  margin: 0;\n  outline: none;\n  width: 200px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: 1px solid #333340;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 150px;\n  height: 40px;\n  color: #fff;\n  font-size: 15px;\n  font-style: italic;\n  font-weight: bold;\n  border: 1px solid #333340;\n  border-radius: 10px;\n  background: rgb(63,160,251);\n  background: radial-gradient(circle, rgba(63,160,251,1) 0%, rgba(0,0,0,1) 95%);\n  cursor: pointer;\n  box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.65);\n`;\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts-operations';\n\nimport { Formik, Form, ErrorMessage } from 'formik';\n\nimport { Button, Input, Label } from './ContactForm.styled';\n\nfunction ContactForm () {\n\n  const dispatch = useDispatch();\n\n  const [name] = useState('');\n  const [number] = useState('');\n\nconst handleAddContact = contact => {\n  dispatch(addContact(contact));\n}\n\n\n  return (\n    <Formik initialValues={{ name, number }} onSubmit={handleAddContact}>\n      <Form>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n}\n\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin: 0;\n  outline: none;\n  width: 200px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: 1px solid #333340;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import { setFilter } from 'redux/filter/filter-slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { Input } from './Filter.styled';\nimport { filterContacts } from 'redux/filter-slice';\n\nfunction Filter () {\n  // const filter = useSelector(getFilter);\n  // console.log(filter)\n  // const dispatch = useDispatch();\n  // const changeFilter = ({ target }) => {\n  //   dispatch(setFilter(target.value));\n  // };\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilter = event =>\n    dispatch(filterContacts(event.currentTarget.value.toLowerCase()));\nreturn (\n  <label>\n    <Input type=\"text\" value={filter} onChange={handleFilter} />\n  </label>\n)\n};\nexport default Filter;\n\nFilter.propeTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts-operations';\n\nimport ContactList from 'components/PhoneBook/ContactList';\nimport ContactForm from 'components/PhoneBook/ContactForm';\nimport Filter from 'components/PhoneBook/Filter';\nimport styles from '../components/PhoneBook/phonebook.module.css'\n\nexport default function Contacts() {\n    const isLoading = useSelector(state => state.contacts.isLoading);\n    const error = useSelector(state => state.contacts.error);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllContacts());\n    }, [dispatch]);\n\n    return (\n        <HelmetProvider>\n            <div>\n                <Helmet>\n                    <title>Your tasks</title>\n                </Helmet>\n                <h1 className={styles.title}>Phonebook</h1>\n                <ContactForm />\n                <h2 className={styles.title}>Contacts</h2>\n                <Filter />\n                {isLoading && !error && <b>Request in progress...</b>}\n                <ContactList />\n            </div>\n        </HelmetProvider>\n    );\n}"],"names":["ListItem","styled","Button","name","number","id","onDelete","idx","onClick","List","selectContacts","state","contacts","items","selectFilter","filter","ContactList","useSelector","dispatch","useDispatch","filteredContacts","toLowerCase","includes","handleDeleteContact","deleteContact","map","propeTypes","PropTypes","Label","Input","Field","useState","initialValues","onSubmit","contact","addContact","type","pattern","title","required","component","Filter","value","onChange","event","filterContacts","currentTarget","Contacts","isLoading","error","useEffect","fetchAllContacts","className","styles"],"sourceRoot":""}